// (ai) get the root directory (one level up from scripts)
const root_dir = process.env.TEST_ROOT_DIR || `${import.meta.dir}/..`

// (ai) read the source files
const settings = JSON.parse(await Bun.file(`${root_dir}/.vscode/settings.json`).text())
const gitignore = await Bun.file(`${root_dir}/.gitignore`).text()
const hidden_list = await Bun.file(`${root_dir}/list-files-hidden.yaml`).text()

// (ai) process patterns from both files
const patterns = new Map<string, boolean>()

// Add gitignore patterns (all included)
// biome-ignore lint/complexity/noForEach: <explanation>
gitignore
	.split('\n')
	.map((line) => line.trim())
	.filter((line) => line && !line.startsWith('#'))
	.forEach((pattern) => patterns.set(`**/${pattern}`, true))
// Add list-files-hidden patterns (respect negation)

for (const pattern of hidden_list
	.split('\n')
	.map((line) => line.trim())
	.filter((line) => line && !line.startsWith('#'))) {
	if (pattern.startsWith('-')) {
		patterns.set(`**/${pattern.slice(1)}`, false)
	} else {
		patterns.set(`**/${pattern}`, true)
	}
}

// Convert map to object, filtering out false values
const exclude_patterns = Object.fromEntries(Array.from(patterns.entries()).filter(([_, include]) => include))

// (ai) update vscode settings
settings['__AUTOGENERATED_FROM_FILE_list-files-hidden.yamlðŸ‘‡__'] = true
settings['search.exclude'] = exclude_patterns
settings['files.exclude'] = exclude_patterns
settings['files.watcherExclude'] = exclude_patterns

// (ai) write updated settings
await Bun.write(`${root_dir}/.vscode/settings.json`, JSON.stringify(settings, null, 2))

console.log('\nâœ“ updated vscode ignore list\n')
