- core principles:
  - begin with foundational observations
  - keep exploring until a solution emerges naturally from the evidence
  - if uncertain, continue reasoning indefinitely
  - question every assumption and inference
  - acknowledge and explore dead ends
  - frequently revise and backtrack if you need to

- tech in use
  - typescript
  - vue
  - tailwind
  - bun (as test and script runner)
  - nuxt 4
  - valibot (validation and inferred db types)
  - cloudflare pages (for nuxt)
  - cloudflare workers (for api)
  - cloudflare ai (for ai)
  - cloudflare d1 (for db)
  - cloudflare r2 (for storage)
  - cloudflare vectorize (for vector search)
  - cloudflare queues (for background jobs)
- you're building a simple but advanced/modern web app for chatting with ai to hire real people for temporary jobs
  - sign in/register
  - chat with ai
  - chat between users (worker and employee)
  - user settings
  - job offers
  - job history

- code quality rules:
  - reliable/error-free code is paramount
  - efficiency/performance/simplicity is key
  - readability/comprehension is important
  - writability is not important
  - stick to package.json dependencies unless significant benefit to opt for something else
  - if you need clarification on any part of the task, ask for more information before proceeding
  - every data type should be 100% typesafe and idiomatic (never type cast unless for special edge cases where it makes sense)

- code style rules:
  - use camelCase for all variables, property keys, and function names
  - use PascalCase for all component names and type definitions
  - use kebab-case for all file names
  - use the default casing from any external dependency
  - valibot schemas are always named with a leading "v" so like valibot user schema becomes vUser
  - types inferred from valibot schemas have leading uppercase "V" like VUser
  - all custom types (not from valibot or external deps) have a leading "T" to differ from global types like TImage

- code comments rules:
  - prefix all comments you write with (ai)

